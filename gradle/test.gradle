test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "passed", "failed", "skipped"
    }
}

pitest {
    pitestVersion = "1.5.2"
    testPlugin = "junit5"
    junit5PluginVersion = '0.12'
    targetClasses = ['com.kim.*']
    excludedClasses = [
            '**.domain.**',
            '**.client.**',
            'com.kim.util.DistanceUtil'
    ]
    threads = 2
    outputFormats = ['XML', 'HTML']

    mutationThreshold = 70
    coverageThreshold = 90

    reportDir = file('build/reports/mutation-tests-results')
    timestampedReports = false
    mutators = ['CONDITIONALS_BOUNDARY',
                'INCREMENTS',
                'INVERT_NEGS',
                'MATH',
                'NEGATE_CONDITIONALS',
                'RETURN_VALS',
                'VOID_METHOD_CALLS',
                'INLINE_CONSTS',
                'REMOVE_CONDITIONALS',
                'EMPTY_RETURNS',
                'FALSE_RETURNS',
                'TRUE_RETURNS',
                'NULL_RETURNS',
                'PRIMITIVE_RETURNS']
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.7
            }
        }
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }

    sourceSets sourceSets.main
}

//jacocoTestCoverageVerification.dependsOn jacocoTestReport
test {
    finalizedBy codeCoverageReport
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}